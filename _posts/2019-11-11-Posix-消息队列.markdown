---
layout: post
title: "Posix 消息队列"
data: 2019-11-11 23:09:00 +0800
author: "riki"
header-img: "img/postfm/20191111.jpg"
tags:
- UNIX
- IPC
- 消息队列
typora-root-url: ..
---

> 记一个悲愤的双十一...

作为学习的一个不可缺少的部分，记录一下学习的Posix消息队列的内容。

##### 什么是消息队列

前面一篇博客提到了FIFO和管道它们的数据模型是字节流I/O模型，存在于它们中的消息不存在边界，那篇博客中写道：

> 比如说一个管道里有100字节的数据，应用程序无法判断这是单次写入100字节，还是分100次每次写一个字节或者其他某种总共100字节的写操作的组合。一个进程写了60字节，另一个字节写了40字节，这也是可能的。如果想要将这种字节流分隔成单个记录，那么是需要应用程序来实现的。

消息队列就不一样了，它可以看作是一个消息链表，拥有写权限的进程可以往里面写入消息，拥有读权限的进程可以往里面读出消息。每个消息都相当于一个记录，它是有边界的。当一个进程要往消息队列中写入消息时，不需要已经存在一个进程准备从该消息队列中读取，这和管道和FIFO又是不一样的。写入消息时，写入者可以赋予该消息一个优先级。

我们设想的消息队列的结构是一个链表，它由一个表头和所有的消息组成，表头中包含该队列的两个属性：队列中允许的最大消息数：mq_maxmsg，以及每个消息的最大大小：ma_msgsize，这是消息队列的两个限制。



消息队列是随内核持续的，所以我们可以在一个进程中创建了一个消息队列，然后在另外一个进程中往该消息队列发送一个消息，最后再启动另外一个进程，从队列中读取消息